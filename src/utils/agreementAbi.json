[
  {
    "type": "impl",
    "name": "AgreementImpl",
    "interface_name": "custos_smart_contracts::interfaces::IAgreement"
  },
  {
    "type": "struct",
    "name": "core::byte_array::ByteArray",
    "members": [
      {
        "name": "data",
        "type": "core::array::Array::<core::bytes_31::bytes31>"
      },
      {
        "name": "pending_word",
        "type": "core::felt252"
      },
      {
        "name": "pending_word_len",
        "type": "core::integer::u32"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "custos_smart_contracts::agreement::Agreement::LegalAgreement",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u256"
      },
      {
        "name": "creator",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "content",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "second_party_address",
        "type": "core::starknet::contract_address::ContractAddress"
      },
      {
        "name": "first_party_valid_id",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "second_party_valid_id",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "signed",
        "type": "core::bool"
      },
      {
        "name": "validate_signature",
        "type": "core::bool"
      },
      {
        "name": "agreement_title",
        "type": "core::byte_array::ByteArray"
      },
      {
        "name": "timestamp",
        "type": "core::integer::u256"
      }
    ]
  },
  {
    "type": "interface",
    "name": "custos_smart_contracts::interfaces::IAgreement",
    "items": [
      {
        "type": "function",
        "name": "create_agreement",
        "inputs": [
          {
            "name": "content",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "second_party_address",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "first_party_valid_id",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "second_party_valid_id",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "agreement_title",
            "type": "core::byte_array::ByteArray"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_agreement_details",
        "inputs": [
          {
            "name": "id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "custos_smart_contracts::agreement::Agreement::LegalAgreement"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_all_agreements",
        "inputs": [],
        "outputs": [
          {
            "type": "core::array::Array::<custos_smart_contracts::agreement::Agreement::LegalAgreement>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_user_agreements",
        "inputs": [
          {
            "name": "address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::array::Array::<custos_smart_contracts::agreement::Agreement::LegalAgreement>"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "validate_agreement",
        "inputs": [
          {
            "name": "agreementId",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "UpgradeableImpl",
    "interface_name": "openzeppelin_upgrades::interface::IUpgradeable"
  },
  {
    "type": "interface",
    "name": "openzeppelin_upgrades::interface::IUpgradeable",
    "items": [
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "new_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "OwnableMixinImpl",
    "interface_name": "openzeppelin_access::ownable::interface::OwnableABI"
  },
  {
    "type": "interface",
    "name": "openzeppelin_access::ownable::interface::OwnableABI",
    "items": [
      {
        "type": "function",
        "name": "owner",
        "inputs": [],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "transfer_ownership",
        "inputs": [
          {
            "name": "new_owner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounce_ownership",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "transferOwnership",
        "inputs": [
          {
            "name": "newOwner",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "renounceOwnership",
        "inputs": [],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "constructor",
    "name": "constructor",
    "inputs": [
      {
        "name": "admin",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
    "kind": "struct",
    "members": [
      {
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
    "kind": "struct",
    "members": [
      {
        "name": "previous_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "new_owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "OwnershipTransferred",
        "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferred",
        "kind": "nested"
      },
      {
        "name": "OwnershipTransferStarted",
        "type": "openzeppelin_access::ownable::ownable::OwnableComponent::OwnershipTransferStarted",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
    "kind": "struct",
    "members": [
      {
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "Upgraded",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Upgraded",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "custos_smart_contracts::agreement::Agreement::AgreementCreated",
    "kind": "struct",
    "members": [
      {
        "name": "agreement_id",
        "type": "core::integer::u256",
        "kind": "key"
      },
      {
        "name": "creator",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "custos_smart_contracts::agreement::Agreement::AgreementSigned",
    "kind": "struct",
    "members": [
      {
        "name": "agreement_id",
        "type": "core::integer::u256",
        "kind": "key"
      },
      {
        "name": "signer",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "custos_smart_contracts::agreement::Agreement::AgreementValid",
    "kind": "struct",
    "members": [
      {
        "name": "agreement_id",
        "type": "core::integer::u256",
        "kind": "key"
      },
      {
        "name": "first_party_id",
        "type": "core::byte_array::ByteArray",
        "kind": "data"
      },
      {
        "name": "second_party_id",
        "type": "core::byte_array::ByteArray",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "custos_smart_contracts::agreement::Agreement::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "OwnableEvent",
        "type": "openzeppelin_access::ownable::ownable::OwnableComponent::Event",
        "kind": "flat"
      },
      {
        "name": "UpgradeableEvent",
        "type": "openzeppelin_upgrades::upgradeable::UpgradeableComponent::Event",
        "kind": "flat"
      },
      {
        "name": "AgreementCreated",
        "type": "custos_smart_contracts::agreement::Agreement::AgreementCreated",
        "kind": "nested"
      },
      {
        "name": "AgreementSigned",
        "type": "custos_smart_contracts::agreement::Agreement::AgreementSigned",
        "kind": "nested"
      },
      {
        "name": "AgreementValid",
        "type": "custos_smart_contracts::agreement::Agreement::AgreementValid",
        "kind": "nested"
      }
    ]
  }
]